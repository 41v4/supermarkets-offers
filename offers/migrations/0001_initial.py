# Generated by Django 4.1.7 on 2023-05-22 13:21

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AbstProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=50)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('url', models.CharField(max_length=100, unique=True)),
                ('priority', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MatchSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notificator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('email', 'Email'), ('telegram', 'Telegram')], default='', max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=50)),
                ('product_brand', models.CharField(blank=True, max_length=50, null=True)),
                ('product_descr', models.CharField(blank=True, max_length=1000, null=True)),
                ('product_price', models.FloatField(blank=True, null=True)),
                ('product_discount', models.IntegerField(blank=True, null=True)),
                ('product_weight', models.IntegerField(blank=True, null=True)),
                ('product_addt_info', models.CharField(blank=True, max_length=1000, null=True)),
                ('product_img_orig', models.CharField(blank=True, max_length=200, null=True)),
                ('product_img_local', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('valid_from', models.DateField(blank=True, null=True)),
                ('valid_until', models.DateField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_method', models.CharField(choices=[('auto', 'automated'), ('man', 'manual')], default='man', max_length=10)),
                ('updated_on', models.DateTimeField(blank=True, null=True)),
                ('updated_method', models.CharField(choices=[('auto', 'automated'), ('man', 'manual')], default='man', max_length=10)),
                ('deactivated_on', models.DateTimeField(blank=True, null=True)),
                ('deactivated_method', models.CharField(choices=[('auto', 'automated'), ('man', 'manual')], default='man', max_length=10)),
                ('abst_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='offers.abstproduct')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='offers.category')),
            ],
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('url', models.CharField(max_length=100, unique=True)),
                ('priority', models.PositiveIntegerField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offers.category')),
            ],
        ),
        migrations.CreateModel(
            name='Supermarket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('maxima', 'Maxima'), ('iki', 'Iki'), ('lidl', 'Lidl'), ('norfa', 'Norfa'), ('rimi', 'Rimi')], default='', max_length=50, unique=True)),
                ('website_url', models.CharField(max_length=100)),
                ('descr', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='WishlistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=50)),
                ('product_name_exact', models.BooleanField(default=False)),
                ('product_brand', models.CharField(blank=True, max_length=50, null=True)),
                ('product_brand_exact', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('valid_until', models.DateField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(blank=True, null=True)),
                ('notificators', models.ManyToManyField(to='offers.notificator')),
                ('supermarkets', models.ManyToManyField(to='offers.supermarket')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WishlistOfferMatchCombined',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('match_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offers.matchsession')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WishlistOfferMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('match_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offers.matchsession')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offers.offer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('wishlist_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offers.wishlistitem')),
            ],
        ),
        migrations.CreateModel(
            name='SubcategoryProductNames',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('subcategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offers.subcategory')),
            ],
        ),
        migrations.AddField(
            model_name='offer',
            name='subcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='offers.subcategory'),
        ),
        migrations.AddField(
            model_name='offer',
            name='supermarket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offers.supermarket'),
        ),
        migrations.AddField(
            model_name='offer',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent_on', models.DateTimeField(blank=True, null=True)),
                ('is_success', models.BooleanField(default=False)),
                ('match_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offers.wishlistoffermatchcombined')),
                ('method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offers.notificator')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MultiOfferAbstProductMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sim_score_spacy', models.FloatField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('abst_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offers.abstproduct')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offers.category')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offers.offer')),
            ],
        ),
        migrations.AddField(
            model_name='abstproduct',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offers.category'),
        ),
        migrations.AddConstraint(
            model_name='wishlistoffermatchcombined',
            constraint=models.UniqueConstraint(fields=('match_session', 'user'), name='unique_match_user'),
        ),
        migrations.AlterUniqueTogether(
            name='subcategoryproductnames',
            unique_together={('id', 'name')},
        ),
    ]
